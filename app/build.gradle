buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.parse.com/repo' }
    }
    dependencies {
        classpath 'com.parse.tools:gradle:1.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        classpath 'me.tatarka:gradle-retrolambda:3.0.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.parse'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        applicationId 'net.rdrei.android.connectivityalert'
        minSdkVersion 21
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    packagingOptions {
        // There's an odd clash between two of the dependencies.
        exclude 'LICENSE.txt'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Allows us to use a gradles.properties to specify these instead of having
    // to hardcode them in Java and check them in into VCS.
    applicationVariants.all { variant ->
        variant.buildConfigField 'String', 'PARSE_APPLICATION_ID', "\"" + parseApplicationId + "\""
        variant.buildConfigField 'String', 'PARSE_MASTER_KEY', "\"" + parseMasterKey + "\""
    }
    dexOptions {
        incremental false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

parse {
    applicationId parseApplicationId
    masterKey parseMasterKey
    // This makes it automatic. Otherwise you would have to run e.g. gradlew parseUploadSymbolsRelease.
    uploadSymbols true
}

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    compile 'com.android.support:support-annotations:22.0.0'
    compile 'io.reactivex:rxandroid:0.24.0'
    compile 'com.jakewharton:butterknife:6.1.0'

    // @Generated and co for Dagger 2.0, which doesn't transitively
    // depend on any particular implementation for this.
    provided 'javax.annotation:jsr250-api:1.0'
    // @Inject, @Provided, ...
    provided 'javax.inject:javax.inject:1'

    compile 'com.google.dagger:dagger:2.0'
    // Only needed at compile time but not at runtime.
    apt 'com.google.dagger:dagger-compiler:2.0'

    // Parse ships their SDK as JARs only
    compile files('libs/Parse-1.9.0.jar')
    compile files('libs/ParseCrashReporting-1.9.0.jar')
    compile 'com.parse.bolts:bolts-android:1.1.4'

    // gradle-retrolambda 2 comes with 1.6 by default
    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:2.0.1'

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.0'
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestCompile 'org.mockito:mockito-core:1.9.5'
}
